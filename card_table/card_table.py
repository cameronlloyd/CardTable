import os

from card_games import War


# ASCII art generated by https://patorjk.com/software/taag/#p=display&f=Doom&t=Card%20Table
ASCII_ART = """
--- /  __ \             | | |_   _|   | |   | |      ---
--- | /  \/ __ _ _ __ __| |   | | __ _| |__ | | ___  ---
--- | |    / _` | '__/ _` |   | |/ _` | '_ \| |/ _ \ ---
--- | \__/\ (_| | | | (_| |   | | (_| | |_) | |  __/ ---
---  \____/\__,_|_|  \__,_|   \_/\__,_|_.__/|_|\___| ---
"""

class CardTable:
    """
    A class representing a card table, with a menu of different card games

    Attributes
    ----------
    banner: str
        The ASCII art displayed above the menu prompt
    option_labels: List[str]
        The names of the card games available, with 'Exit' as the final option
    option_values: List[() => None]
        The executable functions to be associated with each option
    """

    def __init__(self):
        self.banner = ASCII_ART
        self.option_labels = [
            'War',
            'Exit'
        ]
        self.option_values = [
            self.play_war,
            self.exit
        ]

    def _clear_prompt(self) -> None:
        """Clear user prompt"""
        os.system("cls")

    def _get_prompt_text(self) -> str:
        """Build the menu item to display for each menu option"""
        prompt = [self.banner]
        prompt.append('Please choose an option\n')

        option_number = 1
        for option_label in self.option_labels:
            prompt.append(f'{option_number}: {option_label}')
            option_number += 1
        prompt.append('\n')
        return '\n'.join(prompt)

    def _prompt_games(self) -> int:
        """Prompt user to select a game to play"""
        self._clear_prompt()

        # Prompt user until input is valid
        valid_input = False
        while not valid_input:
            print(self._get_prompt_text())
            user_input = input('Enter the number of your choice: ')
            try:
                user_input = int(user_input)
            except:
                self._clear_prompt()
                print('Invalid choice.  Please try again')
                continue

            if (user_input - 1) in range(len(self.option_values)):
                valid_input = True
            return user_input

    def _execute_choice(self, user_input: int) -> None:
        """Execute the game associated with the menu number selected"""
        self._clear_prompt()
        selected_option = self.option_values[(user_input - 1)]
        return selected_option()

    def exit(self) -> None:
        """Terminate the card table prompt"""
        print("Goodbye!")

    def play_war(self) -> None:
        """Launch the card game 'War'"""
        War().play()

    def play_game(self) -> None:
        """Prompt user for a game to choose, and execute the option selected"""
        user_input = self._prompt_games()
        self._execute_choice(user_input)
